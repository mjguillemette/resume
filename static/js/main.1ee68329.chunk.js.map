{"version":3,"sources":["components/Menu.js","components/SmallMenu.js","components/Resume.js","components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["menu","symbol","text","map","item","react_default","a","createElement","className","style","color","lineHeight","Component","Showdown","setOption","html","Converter","makeHtml","Menu","padding","dangerouslySetInnerHTML","__html","fontSize","paddingRight","href","App","Contact","fontWeight","margin","Resume","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+NAIMA,EAFY,CAAC,CAACC,OAAQ,eAAMC,KAAM,UAAW,CAACD,OAAQ,eAAMC,KAAM,WAAY,CAACD,OAAQ,qBAAOC,KAAM,aAEnFC,IAAI,SAAAC,GAAI,OAC7BC,EAAAC,EAAAC,cAAA,MACEC,UAAU,YACVC,MAAO,CAAEC,MAAO,UAAWC,WAAY,YAEvCN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAaJ,EAAKH,QAJjC,KAI8CI,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAYJ,EAAKF,YAI3DU,YCXKA,2BCCxBC,IAASC,UAAU,SAAU,QAE7B,IAgDMC,GAhDY,IAAIF,IAASG,WAgDRC,SA/CX,g5EAgEGC,mLAbX,OACEb,EAAAC,EAAAC,cAAA,OACEC,UAAU,SACVC,MAAO,CACLC,MAAO,UACPS,QAAS,SAEXC,wBAAyB,CAAEC,OAAQN,YATxBH,aClCJM,mLAjBX,OACEb,EAAAC,EAAAC,cAAA,KAAGC,UAAU,UAAUC,MAAO,CAAEa,SAAU,QACxCjB,EAAAC,EAAAC,cAAA,UAAQE,MAAO,CAAEC,MAAO,YAAxB,sBACAL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KACEE,MAAO,CAAEc,aAAc,QACvBC,KAAK,qCAFP,8BAMAnB,EAAAC,EAAAC,cAAA,WATF,yBAHaK,aCsDJa,MAjDf,WACE,OACEpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAACmB,EAAD,MACArB,EAAAC,EAAAC,cAAA,MACEE,MAAO,CACLkB,WAAY,MACZC,OAAQ,IACRN,SAAU,SAJd,wBAqCFjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAACsB,EAAD,SCtCYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO/B,EAAAC,EAAAC,cAAC8B,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.1ee68329.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nconst menuItems = [{symbol: '📜', text: 'Resume'}, {symbol: '✏️', text: 'Contact'}, {symbol: '🖥️', text: 'Projects'}]\r\n\r\nconst menu = menuItems.map(item => (\r\n  <li\r\n    className=\"menuItems\"\r\n    style={{ color: '#1F6C90', lineHeight: '2.215em' }}\r\n  >\r\n    <a className=\"menuEmoji\">{item.symbol}</a>  <a className=\"menuText\">{item.text}</a>\r\n  </li>\r\n))\r\n\r\nclass Menu extends Component {\r\n  render() {\r\n    return (\r\n      <ul\r\n        className=\"menuBar\"\r\n        style={{\r\n          listStyle: 'none',\r\n          display: 'flex',\r\n          margin: '0',\r\n          fontSize: '1.12rem'\r\n        }}\r\n      >\r\n        {menu}\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Menu\r\n","import React, { Component } from 'react'\r\n\r\nclass SmallMenu extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          margin: 'auto',\r\n          borderRadius: '50%',\r\n          height: '75px',\r\n          width: '75px',\r\n          backgroundColor: 'white',\r\n          position: 'fixed',\r\n          bottom: '30px',\r\n          right: '30px',\r\n          cursor: 'pointer'\r\n        }}\r\n        className=\"smallMenu\"\r\n      >\r\n        <p\r\n          style={{\r\n            color: '#aaaaaa',\r\n            position: 'absolute',\r\n            top: 0,\r\n            display: 'block',\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: 'center',\r\n            padding: 0,\r\n            margin: 0,\r\n            lineHeight: '75px',\r\n            fontSize: '4em',\r\n            fontFamily: 'Roboto',\r\n            fontHeight: '300'\r\n          }}\r\n        >\r\n          +\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SmallMenu\r\n","import React, { Component } from 'react'\r\nimport Showdown from 'showdown'\r\n\r\nShowdown.setOption('tables', 'true')\r\n\r\nconst converter = new Showdown.Converter()\r\nconst resume = `## Objective\r\n\r\nI am looking to leverage my passion for technology and design, along with my proven ability to produce results in team-oriented environments, into a career in web software development. My ideal workplace challenges me to continue to educate myself and provides an environment and community which necessitates both the cultivation of strong working relationships and constant personal development.\r\n## Technical Skills\r\n\r\n| JavaScript    | Standards               | Design               | Misc.                      |\r\n| ------------- | ----------------------- | -------------------- | -------------------------- |\r\n| React.js      | HTML5                   | Adobe CS             | Linux / Bash               |\r\n| Node.js       | CSS / Sass              | Illustration         | Java                       |\r\n| ES 6          | TDD                     | Typography           | SQL, GraphQL               |\r\n| Gatsby.js     |      Git                |                      |                            |\r\n\r\n## Work Experience\r\n\r\n**Bartender & Web Admin, Lexx Restaurant, Lexington MA**  \r\nNovember 2015 – Present  \r\n- Worked with a team to ensure guest satisfaction and provide remarkable customer experiences\r\n- Design and implementation of website and online menu; Increased unique traffic in 2018 by 17%\r\n- Creation and management of web strategy and online content\r\n\r\n**Technical Assistant, Francesca Anderson Fine Art, Lexington MA**  \r\nNovember 2016 – April 2017\r\n\r\n- Responsible for the design of web and print content, carefully ensuring consistent branding\r\n- Provided a diverse array of technical support such as data backup and storage solutions\r\n- Extensive use of the Adobe Creative Suite for both print and web content creation\r\n\r\n## Projects\r\n\r\n**Prod Perfect, Technical Lead, Student Team**  \r\nJune 2019 - Present\r\n\r\n- Working with senior leadership team and marketing coordinator to develop a lead-generating marketing web application.\r\n- Guiding team in technical decisions such as tech stack and implementation of software.\r\n\r\n## Education\r\n\r\n**Framingham State University & Stack Education**  \r\nMay 2019 - August 2019  \r\n_Framingham State certified Web Development Bootcamp program_  \r\n_Certificate of Web Development from Framingham State University_\r\n\r\n**Middlesex Community College** _In Progress_  \r\n2017 - Present  \r\n_Completed 40 credits toward Associate of Science degree, transfer program_ \r\n`\r\n\r\nconst html = converter.makeHtml(resume)\r\n\r\nclass Menu extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"Resume\"\r\n        style={{\r\n          color: '#343547',\r\n          padding: '2em 0'\r\n        }}\r\n        dangerouslySetInnerHTML={{ __html: html }}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default Menu\r\n","import React, { Component } from 'react'\r\n\r\nclass Menu extends Component {\r\n  render() {\r\n    return (\r\n      <p className=\"contact\" style={{ fontSize: '1em' }}>\r\n        <strong style={{ color: '#1f6c90' }}>Software Developer</strong>\r\n        <br />\r\n        <a\r\n          style={{ paddingRight: '1rem' }}\r\n          href=\"mailto:mike.guillemette@gmail.com\"\r\n        >\r\n          mike.guillemette@gmail.com\r\n        </a>\r\n        <br />\r\n        (978) 340-0477\r\n      </p>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Menu\r\n","import React from 'react'\r\nimport './App.css'\r\nimport Menu from './components/Menu'\r\nimport SmallMenu from './components/SmallMenu'\r\nimport Resume from './components/Resume'\r\nimport Contact from './components/Contact'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Contact />\r\n        <h1\r\n          style={{\r\n            fontWeight: '700',\r\n            margin: '0',\r\n            fontSize: '3 em'\r\n          }}\r\n        >\r\n          Michael Guillemette\r\n        </h1>\r\n        {/* <Menu />{' '} */}\r\n      </header>\r\n      {/* <SmallMenu />\r\n      <article\r\n        style={{\r\n          maxWidth: '36rem',\r\n          margin: '2em .12em 1em .12em',\r\n          fontSize: '1.2rem'\r\n        }}\r\n      >\r\n        <h2 style={{ margin: '.125em', fontWeight: '700', color: '#1F6C90' }}>\r\n          Blog Slug\r\n        </h2>\r\n        Tesseract dream of the mind's eye a billion trillion at the edge.\r\n      </article>\r\n      <article\r\n        style={{\r\n          maxWidth: '36rem',\r\n          margin: '2em .12em 1em .12em',\r\n          fontSize: '1.2rem'\r\n        }}\r\n      >\r\n        <h2 style={{ margin: '.125em', fontWeight: '700', color: '#1F6C90' }}>\r\n          Second Blog Slug\r\n        </h2>\r\n        Sometimes we think big things about little pieces of bread. How do we go\r\n        on living, knowing these things?\r\n      </article> */}\r\n      <div className=\"resume\">\r\n        <Resume />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}